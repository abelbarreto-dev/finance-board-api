datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EnumBankAccType {
  PAYMENT
  SAVING
  CHECKING
}

enum EnumBanks {
  ITAU
  BRADESCO
  SANTANDER
  CAIXA
  HSBC
  CITI
  BCO
  BANCO_DO_BRASIL @map("BANCO DO BRASIL")
  NUBANK
  INTER
  WILLBANK
  PICPAY
  C6BANK
  BTG_PACTUAL     @map("BTG PACTUAL")
  JP_MORGAN       @map("JP MORGAN")
}

enum EnumFinance {
  WITHDRAW
  DEPOSIT
}

enum EnumCard {
  VIRTUAL
  TEMPORARY
  PHYSICAL
}

enum EnumFinancePlus {
  WITHDRAW
  DEPOSIT
  PAYMENT
}

enum EnumFlag {
  MASTERCARD
  VISA
  ELO
  AMEX
  DINERS
  HIPERCARD
}

enum EnumOpState {
  MYSELF
  OTHERS
}

enum EnumPix {
  CPF
  CNPJ
  EMAIL
  PHONE
  RANDOM
}

enum EnumTransfer {
  PIX
  TED
  DOC
}

model User {
  id Int @id @default(autoincrement())

  name     String
  lastName String  @map("last_name")
  email    String  @unique
  username String  @unique
  password String
  active   Boolean @default(true)
  mobile   String?

  money Money?
  banks Bank[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Money {
  id Int @id @default(autoincrement())

  userId Int  @unique @map("user_id")
  user   User @relation(fields: [userId], references: [id])

  balanceValue Decimal @map("balance_value")

  moneyBoxes  MoneyBox[]
  operaMoneys OperaMoney[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model OperaMoney {
  id Int @id @default(autoincrement())

  moneyId Int   @map("money_id")
  money   Money @relation(fields: [moneyId], references: [id])

  typeTransfer EnumFinancePlus @map("type_transfer")
  balanceValue Decimal         @map("balance_value")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model MoneyBox {
  id Int @id @default(autoincrement())

  moneyId Int   @map("money_id")
  money   Money @relation(fields: [moneyId], references: [id])

  description  String
  objective    Decimal?
  balanceValue Decimal  @map("balance_value")

  operaMoneyBox OperaMoneyBox[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model OperaMoneyBox {
  id Int @id @default(autoincrement())

  moneyBoxId Int      @map("money_box_id")
  moneyBox   MoneyBox @relation(fields: [moneyBoxId], references: [id])

  typeTransfer EnumFinance @map("type_transfer")
  balanceValue Decimal     @map("balance_value")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Bank {
  id Int @id @default(autoincrement())

  name EnumBanks

  userId Int  @map("user_id")
  user   User @relation(fields: [userId], references: [id])

  accountType EnumBankAccType @map("account_type")

  numbAccount  String  @map("number_account")
  numbAgency   String  @map("number_agency")
  balanceValue Decimal @map("balance_value")

  operaBanks OperaBank[]
  bankBoxes  BankBox[]
  pixKeys    PixKey[]
  cards      Card[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model OperaBank {
  id Int @id @default(autoincrement())

  bankId Int  @map("bank_id")
  bank   Bank @relation(fields: [bankId], references: [id])

  description   String
  typeTransfer  EnumTransfer    @map("type_transfer")
  state         EnumOpState
  bankOperation EnumFinancePlus @map("bank_operation")
  senderName    String          @map("sender_name")
  receiverName  String          @map("receiver_name")
  balanceValue  Decimal         @map("balance_value")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model PixKey {
  id Int @id @default(autoincrement())

  bankId Int  @map("bank_id")
  bank   Bank @relation(fields: [bankId], references: [id])

  name    String
  typeKey EnumPix @map("type_key")
  pixKey  String  @map("pix_key")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model BankBox {
  id Int @id @default(autoincrement())

  bankId Int  @map("bank_id")
  bank   Bank @relation(fields: [bankId], references: [id])

  description  String
  objective    Decimal?
  balanceValue Decimal  @map("balance_value")

  operaBankBoxes OperaBankBox[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model OperaBankBox {
  id Int @id @default(autoincrement())

  bankBoxId Int     @map("bank_box_id")
  bankBox   BankBox @relation(fields: [bankBoxId], references: [id])

  typeTransfer EnumFinance @map("type_transfer")
  balanceValue Decimal     @map("balance_value")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Card {
  id Int @id @default(autoincrement())

  bankId Int  @map("bank_id")
  bank   Bank @relation(fields: [bankId], references: [id])

  description  String
  cardType     EnumCard @map("card_type")
  cardFlag     EnumFlag @map("card_flag")
  cardLimit    Decimal  @map("card_limit")
  currentLimit Decimal  @map("current_limit")
  balanceValue Decimal? @map("balance_value")
  reversal     Boolean  @default(false)

  invoices Invoice[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Invoice {
  id Int @id @default(autoincrement())

  cardId Int  @map("card_id")
  card   Card @relation(fields: [cardId], references: [id])

  description String?

  quantity     Int
  invoicePaid  Int     @map("invoice_paid")
  balanceValue Decimal @map("balance_value")

  operaInvoices OperaInvoice[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model OperaInvoice {
  id Int @id @default(autoincrement())

  invoiceId Int     @map("invoice_id")
  invoice   Invoice @relation(fields: [invoiceId], references: [id])

  balanceValue Decimal @map("balance_value")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}
